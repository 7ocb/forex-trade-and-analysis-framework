<project name="tas" default="lib" basedir=".">
  <description>
    Trade anal system
  </description>

  <property name="build" location="build"/>
  
  <!-- set global properties for this build -->
  <property name="src.lib" location="src"/>
  <property name="build.lib" location="${build}/tas"/>

  <property name="src.tests" location="tests"/>
  <property name="build.tests" location="${build}/tests"/>
  
  <property name="dist"  location="dist"/>

  <!-- <property name="scala.home" location="/usr/share/scala/"/> -->

  <property file="local.properties"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by build-library -->
    <mkdir dir="${build.lib}"/>
    <mkdir dir="${build.tests}"/>

    <property name="scala-library.jar"
              value="${scala.home}/lib/scala-library.jar" />

    <property name="scala-actors.jar"
              value="${scala.home}/lib/scala-actors.jar" />

    <path id="build.classpath">
      <pathelement location="${scala-library.jar}" />
      <pathelement location="${scala-actors.jar}" />
    </path>

    <taskdef resource="scala/tools/ant/antlib.xml">
      <classpath>
        <pathelement location="${scala.home}/lib/scala-compiler.jar"   />
        <pathelement location="${scala.home}/lib/scala-reflect.jar"   />
        <pathelement location="${scala-library.jar}"   />
      </classpath>
    </taskdef>

  </target>

  <target name="build-library" depends="init"
          description="build the tas.jar library " >

    <fsc srcdir="${src.lib}"
         destdir="${build.lib}"
         classpathref="build.classpath"
         addparams="-feature"
         deprecation="yes"/>

  </target>


  <target name="lib" depends="build-library"
          description="generate the library" >

    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <jar jarfile="${dist}/lib/tas.jar" basedir="${build.lib}"/>
  </target>

  <target name="init-for-tests" depends="lib">
    
    <path id="tests.classpath">
      <pathelement location="${scala-library.jar}" />
      <pathelement location="${scala-actors.jar}" />
      <pathelement location="lib/scalatest_2.10-2.0.M5b.jar" />
      <pathelement location="lib/scalamock-core_2.10-3.0.1.jar" />
      <pathelement location="lib/scalamock-scalatest-support_2.10-3.0.1.jar" />
      <pathelement location="${dist}/lib/tas.jar" />
      <pathelement location="${build.tests}"/>
    </path>

    <taskdef name="scalatest" classname="org.scalatest.tools.ScalaTestAntTask">
      <classpath refid="tests.classpath"/>
    </taskdef>

  </target>
  
  <target name="compile-tests" depends="init-for-tests">
    <fsc srcdir="${src.tests}"
         destdir="${build.tests}"
         classpathref="tests.classpath"
         addparams="-feature"
         deprecation="yes"/>
  </target>


  <target name="run-single-test" if="testclass" depends="compile-tests">
    <scalatest runpath="${build.tests}" wildcard="${testclass}"/>
  </target>

  <target name="run-all-tests" unless="testclass" depends="compile-tests">
    <scalatest runpath="${build.tests}"/>
  </target>
  
  <target name="tests" depends="run-single-test, run-all-tests"
          description="run tests (specify class name in -Dtestclass= to run only one test"/>

  <target name="clean"
          description="clean up" >

    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>
